org: dakshesh
app: zoomin
service: zoomin
frameworkVersion: '3'

provider:
  name: aws
  timeout: 20
  tracing:
    lambda: true
  environment:
    ACCESS_KEY_ID: AKIA4VZ2PIY6Y7GTEIRV
    SECRET_ACCESS_KEY: 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
    RDS_HOST: database-2.c1fkrr63gkbf.us-east-1.rds.amazonaws.com
    RDS_PORT: 3307
    RDS_USER: kashyap3344
    RDS_PASSWORD: KAjivani
    RDS_DB_NAME: zoomin
    JWT_SECRET_KEY: zoominlive
    JWT_REFRESH_SECRET_KEY: 2d
    ACCESS_TOKEN_EXPIRY: 1h
    REFRESH_TOKEN_EXPIRY: 1d
    NODE_ENV: production
    AWS_BUCKET_NAME: zoomin-live-images
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action: 's3:ListBucket'
          Resource:
            - '*'
        - Effect: Allow
          Action:
            - 's3:GetObject'
            - 's3:PutObject'
          Resource:
            - 'arn:aws:cloudformation:us-east-1:871464126013:stack/Zoomin-dev/4f3ff9a0-3990-11ed-9596-0ead604b80fd'

functions:
  api:
    handler: handler.handler
    events:
      - httpApi: '*'
  getUserDetails:
    handler: handler.handler
    events:
      - httpApi: 'GET /api/users'
  createUser:
    handler: handler.handler
    events:
      - httpApi: 'POST /api/users/createUser'
  login:
    handler: handler.handler
    events:
      - httpApi: 'POST /api/users/login'
  changePassword:
    handler: handler.handler
    events:
      - httpApi: 'PUT /api/users/changePassword'
  authentication:
    handler: handler.handler
    events:
      - httpApi: 'POST /api/users/authentication'
  resendVerificationCode:
    handler: handler.handler
    events:
      - httpApi: 'PUT /api/users/resendVerificationCode'
  forgetPassword:
    handler: handler.handler
    events:
      - httpApi: 'PUT /api/users/forgetPassword'
  updateUserProfile:
    handler: handler.handler
    events:
      - httpApi: 'PUT /api/users'
  deleteUserProfile:
    handler: handler.handler
    events:
      - httpApi: 'DELETE /api/users'
  uploadImageToS3:
    handler: handler.handler
    events:
      - httpApi: 'POST /api/users/uploadImage'
  deleteImageFromS3:
    handler: handler.handler
    events:
      - httpApi: 'DELETE /api/users/deleteImage'

plugins:
  - serverless-offline
