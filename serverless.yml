org: dakshesh
app: zoomin
service: zoomin
frameworkVersion: "3"

provider:
  name: aws
  deploymentMethod: direct
  runtime: nodejs16.x
  httpApi:
    cors: true
  timeout: 15
  tracing:
    lambda: true
  websocketsApiName: websockets-api
  websocketsApiRouteSelectionExpression: $request.body.action
  environment:
    AWS_BUCKET_NAME: zoomin-stage-images
    ACCESS_KEY_ID: AKIAYEUNNGGXZZWD3RES
    SECRET_ACCESS_KEY: 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
    EMAIL_SOURCE_ACCOUNT: "support@zoominlive.com"
    RDS_HOST: zoomin-1.crzgnnp8iqzv.us-west-2.rds.amazonaws.com
    RDS_PORT: 3306
    RDS_USER: zoomin_dbuser
    RDS_PASSWORD: Wk8$b6!xR
    RDS_DB_NAME: zoomin_stage
    #RDS_HOST: 127.0.0.1
    #RDS_PORT: 3306
    #RDS_USER: root
    #RDS_DB_NAME: zoomin_stage
    JWT_SECRET_KEY: zoominlivesecretkey
    LIVE_STREAM_SECRET_KEY: livestreamsecretkey
    JWT_REFRESH_SECRET_KEY: 2d
    ACCESS_TOKEN_EXPIRY: 1d
    REFRESH_TOKEN_EXPIRY: 1d
    NODE_ENV: production
    FE_SITE_BASE_URL: https://staging.zoominlive.com/
    type: "service_account"
    project_id: "zoomin-push-notifications"
    private_key_id: "1103eee93f0e16663970b897519c219dfef17831"
    private_key: "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCqyajLADdHkTiO\npFhAcx5QD9ioUQVKJ4BpHpSKhYUuLDK4RhBPwbAQWXBeKwEEC5L6ET6+YpS5hdzg\nhWYeY/ht7DIPDYcA21d7nyoB62bg5juM81L2rZMPekrAP8By4bE4bpGOl04d4hIf\ndV6NYohVwsz9zzcJLdqhnm8QIlVP3O1Iiybcm9b0zYT5oJ4d46IfXhf+KzX2S+HS\neFDgKOSs1SdO7WkloDhi1enKHMAI37cX9Iok14OGJgco5Fj5PaTwV/EXlNoOafyi\nS0bZqM0Ty8XIiM8w/49rqA72NOxM8vKmcVNrR5ASzfrmBGYb+SvpIBj+ndbxQToM\nGVHh+rSzAgMBAAECggEARaCyYpSjdNd1Pd4tppToOk7Djxd89xb0qKaRe4nk2oal\nZPAXjVSTMY8tGw8gOmR3luC5+kdZh+tVuelY0TIDodjmLbHfpM9HsrwYlbDBgBYN\nGDFJVQ09w9UhLZCwJoXxyOZ3DDGOZOt6ZP3mPvD5UTF6fk1hDCp4FGTxtZuxuT1X\ntVB8A46yMlPzrhqdUxoToS2G9rIJqsncAs76+e/ocLCDP3v5POXPt5TpkA2v5Ii8\nlENW9MRs/N17X5FVgW8zc8RBNzJHn07oKiOMRTZTbjGGOTfvVjw+N3iY9Ww5NlWJ\nt+knN/3GUUGUHZqI4+8EAz0GQQglJ1QkHbRuDl4FAQKBgQDTAdx74EEe/ejYYNZZ\nRiDAeNueGTN6T3sDD183OKEu0F9rHrD5VG6gq2L30UuYBHO14AhUurOAXq4u7oo7\nSwaxF3Fdmbh2bamawX4+du5yDl8xH191c4ZuB1+mDpoGRSVmD8aEsDKrdM4LgOad\nmsNMfZtindiPMSb19tBlyMWRAQKBgQDPNFsnS0xQvAThxd9ZP8NkTyjYhwvXQdoV\npvZhHi6kogdAu3/Plst1eA/qXpQTV+TDNmtQJoHCRCyaxv2BpmidJ8Dg3dP4CHSK\njPY6j5KZ3rrtrJrBU9ojNcu5JMyxEaGKmdSOoUdujOXidViDJ7AQhakspmUImFKc\nGWFlN/VRswKBgBolm+W5xzgI7KaLcWREnWBcWZKAuvFIEg0yBXF5UffUGE7U0cdD\noCXGtw/QXpaqzo/WABJHxGB+2wSzyGtKg7zEE+cuWj5Knn6vxW4GHMwDXeZfZdvP\nAfR2c3LHUmy+esDn6YidsNmwMqwYP/t9pv++fNe+iYxM4fAOsoo6U8kBAoGAa4Vn\np8RTHbHzdpUPiWilI/BP6cxqQJFTcdjqEQtweM37pYOmlzpQ6ewblirt+/uoIgSj\nOzxAKWbnHooUEqsfri1q0UVLMXJxx1POkiTelioWJi9jPt8cWxkXVkPaVCgqA5o/\nyqO2RY+n2xO5kpWNr4UsfJb75rHkbExfVf7rtjECgYBUDgT/XDSfXkO8v3bQYd15\no/7uhl12oZ7qsADg8W8Upz3SmzF4v19NCM43XX7ZeeSi0yG89kOpVoVb0BZ951qy\noxkeZjuOypVVAWEEEzyYNZoa4cmnU3BAdu+cRbVohc6CcCHBOEuVN8Rqfb3MRTbV\nVaGpuChOTV0FJzG3YxWjYg==\n-----END PRIVATE KEY-----\n"
    client_email: "firebase-adminsdk-eg6hb@zoomin-push-notifications.iam.gserviceaccount.com"
    client_id: "115875974791597202410"
    auth_uri: "https://accounts.google.com/o/oauth2/auth"
    token_uri: "https://oauth2.googleapis.com/token"
    auth_provider_x509_cert_url: "https://www.googleapis.com/oauth2/v1/certs"
    client_x509_cert_url: "https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-eg6hb%40zoomin-push-notifications.iam.gserviceaccount.com"
    websocket_endpoint: "https://6i6bw7p391.execute-api.us-east-1.amazonaws.com/stage"
    
  stage: stage
  region: us-east-1
functions:
  connectHandler:
    handler: websocket/handler.connectHandler
    events:
      - websocket: $connect
  
  disconnectHandler:
    handler:  websocket/handler.disconnectHandler
    events:
      - websocket: $disconnect

  defaultHandler:
    handler:  websocket/handler.defaultHandler
    events: 
      - websocket: $default

  userFunction:
    handler: handler.handler
    events:
      - httpApi: "*"

  cameraFunction:
    handler: handler.handler
    events:
      - httpApi:
          method: "*"
          path: /api/cams
      - httpApi:
          method: "*"
          path: /api/cams/add
      - httpApi:
          method: "*"
          path: /api/cams/delete

  childFunction:
    handler: handler.handler
    events:
      - httpApi:
          method: "*"
          path: /api/family/child/add
      - httpApi:
          method: "*"
          path: /api/family/child/edit
      - httpApi:
          method: "*"
          path: /api/family/child/disable
      - httpApi:
          method: "*"
          path: /api/family/child/enable
      - httpApi:
          method: "*"
          path: /api/family/child/delete

  familyFunction:
    handler: handler.handler
    events:
      - httpApi:
          method: "*"
          path: /api/family
      - httpApi:
          method: "*"
          path: /api/family/add
      - httpApi:
          method: "*"
          path: /api/family/edit
      - httpApi:
          method: "*"
          path: /api/family/addParent
      - httpApi:
          method: "*"
          path: /api/family/disable
      - httpApi:
          method: "*"
          path: /api/family/enable
      - httpApi:
          method: "*"
          path: /api/family/delete
      - httpApi:
          method: "*"
          path: /api/family/setPassword
      - httpApi:
          method: "*"
          path: /api/family/emailChange
      - httpApi:
          method: "*"
          path: /api/family/checkLinkValid

  roomFunction:
    handler: handler.handler
    events:
      - httpApi:
          method: "*"
          path: /api/rooms/add
      - httpApi:
          method: "*"
          path: /api/rooms/edit
      - httpApi:
          method: "*"
          path: /api/rooms/delete
      - httpApi:
          method: "*"
          path: /api/rooms/list
      - httpApi:
          method: "*"
          path: /api/rooms

  liveStreamFunction:
    handler: handler.handler
    events:
      - httpApi:
          method: "*"
          path: /api/liveStream
      - httpApi:
          method: "*"
          path: /api/liveStream/start
      - httpApi:
          method: "*"
          path: /api/liveStream/stop

  customerFunction:
    handler: handler.handler
    events:
      - httpApi:
          method: "*"
          path: /api/customers/all
      - httpApi:
          method: "*"
          path: /api/customers/createCustomer
      - httpApi:
          method: "*"
          path: /api/customers/edit
      - httpApi:
          method: "*"
          path: /api/customers/delete
      - httpApi:
          method: "*"
          path: /api/customers/locations
          
  disableScheduledMembers:
    handler: cron.disableScheduledFamilyAndChild
    events:
      - schedule: rate(1 hour)

  enableScheduledChildren:
    handler: cron.enableScheduledChild
    events:
      - schedule: rate(1 hour)
  enableDisablescheduledRoom:
    handler: cron.enableDisableScheduledRoom
    events:
      - schedule: rate(1 hour)

plugins:
  - serverless-offline

  
